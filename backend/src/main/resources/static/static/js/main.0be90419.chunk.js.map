{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["dd","corpId","fetch","then","res","json","result","data","permission","requestAuthCode","onSuccess","alert","JSON","stringify","axios","get","code","response","catch","error","onFail","err","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAYAA,SAAS,WACP,IAAIC,EACJC,MAAe,WACZC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GAELL,EAASK,EAAOC,KAAKN,OAErBD,UAAWQ,WAAWC,gBAAgB,CAEpCR,OAAQA,EACRS,UAAW,SAASJ,GAClBK,MAAMC,KAAKC,UAAUP,IACrBQ,IAAMC,IAAa,mBAAqBT,EAAOU,MAC5Cb,MAAK,SAAAc,GACJN,MAAMC,KAAKC,UAAUI,OAGtBC,OAAM,SAAAC,GACLR,MAAMC,KAAKC,UAAUM,QAK3BC,OAAS,SAASC,GAChBV,MAAMC,KAAKC,UAAUQ,aAMhBC,MAnCf,aCIeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.0be90419.chunk.js","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport * as dd from 'dingtalk-jsapi';\n\n//内网穿透工具介绍:\n// https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n// 替换成后端服务域名\nconst domain = \"\";\nfunction App() {\n\n}\n\ndd.ready(function () {\n  let corpId;\n  fetch(domain + '/config')\n    .then(res => res.json())\n    .then((result) => {\n      // alert(JSON.stringify(result));\n      corpId = result.data.corpId;\n      // dd.ready参数为回调函数，在环境准备就绪时触发，jsapi的调用需要保证在该回调函数触发后调用，否则无效。\n      dd.runtime.permission.requestAuthCode({\n\n        corpId: corpId, //三方企业ID\n        onSuccess: function(result) {\n          alert(JSON.stringify(result));\n          axios.get(domain + \"/login?authCode=\" + result.code)\n            .then(response => {\n              alert(JSON.stringify(response))\n              // console.log(response)\n            })\n            .catch(error => {\n              alert(JSON.stringify(error))\n              // console.log(error.message)\n            })\n\n        },\n        onFail : function(err) {\n          alert(JSON.stringify(err))\n        }\n      });\n    });\n});\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}